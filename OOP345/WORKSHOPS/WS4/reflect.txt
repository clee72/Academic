
// Name:Wonhwa Lee
// Seneca Student ID:076086149
// Seneca email:wlee72@myseneca.ca
// Date of completion:October 08, 2019
//
// I confirm that the content of this file is created by me,
//   with the exception of the parts provided to me by my professor


From this workshop, I have learned how to access data by using a double-pointer and array of pointers. We used the double-pointer and array of pointers to store each reservation information. Each element of the array of pointer holds the strings of reservation. Also, I have a better understanding of composition and aggregation between the modules (e.g., aggregation: ComfirmationSender and Reservation).

1. the differences between the implementations of composition and aggregation.
  Composition:
 It is a has -a relationship between classes. The owner class takes responsibility for the creation and destruction of its component objects.
In this workshop,  the Restaurant and Reservation module is a composition relationship. The Reservation object does not exist apart from the Restaurant object. The constructor of the Restaurant creates the Reservation object(e.g. Restaurant(Reservation* reservations[], size_t cnt). 

Aggregation:
 It is a more flexible design than composition. Because the owner class is not involved in the creation and destruction of its component class. 
For instance, in this workshop,  Reservation and ConfirmationSender module, whose relationship is aggregation, the ConfirmationSender module does not affect the creation and destruction of its objects.


2. the difference between the implementations of move and copy functions in a composition and an aggregation.

In the composition relationship of the Restaurant and Reservation,  the assignment operator destroys the old object and creates a new object, which means the owner of the class has ownership of the destruction and creation of the subobject(e.g. Reservation object).  However, in the aggregation relationship, the ConfirmationSender module is not involved in any creation and destruction of the Reservation object.


